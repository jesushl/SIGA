/*
 * Porgrama de para Auditoria Interna  UNAM
 * Desarrollado por José de Jesús Herrera Ledón en el año 2013 
 * para el uso de auditores en equipos personales
 */
package SIGAMARKS2.FramesAndPanels;

///////////////////////////////////////////////
import SIGAMARKS2.Complex.Observations.NewComplexObservation;
import SIGAMARKS2.Marks.Finders.ApplicationMarks;
import mx.unam.patronato.auditoria.siga.core.daoimpl.DocumentoDAOImpl;
import mx.unam.patronato.auditoria.siga.core.model.Documento;
import mx.unam.patronato.auditoria.siga.core.model.Usuario;
import mx.unam.patronato.auditoria.siga.core.service.impl.MarcaDocumentoServiceImpl;
import java.awt.Graphics2D;
import java.awt.Image;
import java.nio.ByteBuffer;
import javax.swing.ImageIcon;
///////////////////////////
//SIGAPersistence
///////////////////////////
//SIGAValidators
import SIGAMARKS2.Validations.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.math.BigDecimal;
import java.nio.channels.FileChannel;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.LineUnavailableException;
import mx.unam.patronato.auditoria.siga.core.daoimpl.MarcaDAOImpl;
import mx.unam.patronato.auditoria.siga.core.daoimpl.Marca_DocumentoDAOImpl;
import mx.unam.patronato.auditoria.siga.core.model.MarcaDocumento;
////////////////////////////

/**
 * Clase principal del sistema local SIGA Docs implementado en java Swing Base
 * de datos local Derby Sin Servidor
 *
 * @author José de Jesús Herrera Ledón
 * @since Octubre 10, 2013
 */
public class MainGroup extends javax.swing.JFrame {

    private int ActualPageOnDocument;   ////Reprecenta la página del documento que se muestra
    PDFFond PDFFondObj;         //Clase que dibuja el documento PDFFondObj
    boolean fileSelectedBoolean;//Si un archivo ha sido selecciondado su esado pasa a true
    Image markImage;
    Graphics2D graphics2D;
    private String nameFile;
    private String dirSpecificMark;
    private String symbolSelectS;
    private short idMarcaSelected;
    boolean textEditorVisible;  //Editor de texto visible sólo si se crea una observación
    final MiniMarkPane paneMarkToDraw;//Panel donde se ubica el dibujo previo de una marca a editar
    int desliceDocumentOnY;  //Movimiento vertical del scrollBar
    private int markPosX, markPosY;    //Posicion de la marca que se edita 
    //////////////////////Perfil
    private Usuario usuario;
    private Documento documento;
    ////////////////////////////////////////////////////////////////////////////
    final String pathMarks = "src\\SIGAMARKS2\\marksIconsFile\\";
    MarksPageDraw marksPageDrawPanel;
    private List<MarcaDocumento> listMarkPage;
    private MarcaDocumento markSelectedDocumento;
    boolean newMarkB, isNotaAclaratoria, isAnotacionIncorrecta;
    JPanelNotas panelNotas;
    int marksEditorW, marksEditorH;

    /**
     * Constructor de form MainGroup. Inicializa y construye algunas variables y
     * objetos de inicio
     */
    public MainGroup() {
        PDFFondObj = new PDFFond();
        fileSelectedBoolean = false;
        //PaintMarkComponent = new PaintMark();
        nameFile = "";
        paneMarkToDraw = new MiniMarkPane();//Un panel del tamaño de una marca 
        dirSpecificMark = pathMarks;
        desliceDocumentOnY = 0;
        //Panel de marcas
        marksPageDrawPanel = new MarksPageDraw();//Panel donde se dibujan las marcas
        newMarkB = true;
        //documento = null;
        isAnotacionIncorrecta = false;
        isNotaAclaratoria = false;
        marksEditorH = 1200;
        marksEditorW = 1000;
        documento = DocumentoDAOImpl.getInstance().select(3);///Eliminar
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserPDF = new javax.swing.JFileChooser();
        jPanelObservation = new javax.swing.JPanel();
        jLabelConcepto = new javax.swing.JLabel();
        jTextFieldConceptoOBS = new javax.swing.JTextField();
        jScrollPaneDescripcion = new javax.swing.JScrollPane();
        jEditorPaneDescripcion = new javax.swing.JEditorPane();
        jScrollPaneCausa = new javax.swing.JScrollPane();
        jEditorPaneCausa = new javax.swing.JEditorPane();
        jLabelNormatividadQNSC = new javax.swing.JLabel();
        jScrollPaneEfecto = new javax.swing.JScrollPane();
        jEditorPaneEfecto = new javax.swing.JEditorPane();
        jLabelDescripcionObs = new javax.swing.JLabel();
        jLabelCausaObs = new javax.swing.JLabel();
        jLabelEfectoOBS = new javax.swing.JLabel();
        jLabelTitleOBS = new javax.swing.JLabel();
        jScrollPaneNormatividadQNSC = new javax.swing.JScrollPane();
        jTextPaneNormatividadQNSC = new javax.swing.JTextPane();
        jButtonObservacionOK = new javax.swing.JButton();
        jButtonObservacionCancelar = new javax.swing.JButton();
        jDialogObservationAlert = new javax.swing.JDialog();
        jPanelOBSAlert = new javax.swing.JPanel();
        jButtonSimbolAlert = new javax.swing.JButton();
        jButtonAceptarOBSAlert = new javax.swing.JButton();
        jScrollPaneTextAlertOBS = new javax.swing.JScrollPane();
        jTextAreaTextAlertOBS = new javax.swing.JTextArea();
        jPanelArchivosRecientes = new javax.swing.JPanel();
        jLabelArchivosRecientes = new javax.swing.JLabel();
        jPanelListArchivosRecientes = new javax.swing.JPanel();
        jInternalFrameMarksEditor = new javax.swing.JInternalFrame();
        MarkBottonVDF = new javax.swing.JPanel();
        MarkBottonVCDF = new javax.swing.JButton();
        MarkBottonVEF = new javax.swing.JButton();
        MarkBottonVCRC = new javax.swing.JButton();
        MarkBottonVCRP = new javax.swing.JButton();
        MarkBottonVF = new javax.swing.JButton();
        MarkBottonOAV = new javax.swing.JButton();
        MarkBottonPDA = new javax.swing.JButton();
        MarkBottonPA = new javax.swing.JButton();
        MarkBottonDR = new javax.swing.JButton();
        MarkBottonCPC = new javax.swing.JButton();
        MarkBottonDDCIOH = new javax.swing.JButton();
        MarkBottonDQNRR = new javax.swing.JButton();
        MarkBottonAIQNDC = new javax.swing.JButton();
        MarkBottonNotasA = new javax.swing.JButton();
        MarkBottonFDDEI = new javax.swing.JButton();
        MarkBottonNA = new javax.swing.JButton();
        MarkBottonFDD = new javax.swing.JButton();
        MarkBottonDDPAI = new javax.swing.JButton();
        MarkBottonSuma = new javax.swing.JButton();
        MarkBottonVS = new javax.swing.JButton();
        MarkBottonSPA = new javax.swing.JButton();
        QuitarBoton_AbrirDocumento = new javax.swing.JButton();
        jLayeredPaneDrawArea = new javax.swing.JLayeredPane();
        DrawPanel = new javax.swing.JPanel();
        PDFPanel = new javax.swing.JPanel();
        jButtonSiguiente = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jSliderPDFMarks = new javax.swing.JSlider();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        DrawPanel1 = new javax.swing.JPanel();
        PDFPanel1 = new javax.swing.JPanel();
        MenuBarrNorthInternalFrameMarks = new javax.swing.JMenuBar();
        jMenuProgramaDeRevisiones = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuConsultaTrabajos = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuTrabajosEnEjecucion = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuConsultarInformesYObservaciones = new javax.swing.JMenu();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jPanelLogin = new javax.swing.JPanel();
        jLabelUserRecuest = new javax.swing.JLabel();
        jLabelPasswodrRecuest = new javax.swing.JLabel();
        jTextFieldUser = new javax.swing.JTextField();
        jPasswordLogin = new javax.swing.JPasswordField();
        jButtonEntrar = new javax.swing.JButton();
        jButtonFondoFrame = new javax.swing.JButton();
        jLabelSIGAAuditoriaUNAM = new javax.swing.JLabel();

        jFileChooserPDF.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooserPDF.setSelectedFile(new java.io.File("C:\\SIGA\\java.pdf"));

        jPanelObservation.setBackground(new java.awt.Color(255, 255, 255));
        jPanelObservation.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jPanelObservation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelObservation.setDoubleBuffered(false);
        jPanelObservation.setInheritsPopupMenu(true);
        jPanelObservation.setMaximumSize(new java.awt.Dimension(325, 540));
        jPanelObservation.setMinimumSize(new java.awt.Dimension(325, 540));
        jPanelObservation.setPreferredSize(new java.awt.Dimension(325, 540));

        jLabelConcepto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelConcepto.setForeground(new java.awt.Color(51, 153, 255));
        jLabelConcepto.setText("Concepto:");
        jLabelConcepto.setToolTipText("");

        jTextFieldConceptoOBS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldConceptoOBS.setToolTipText("Concepto de la Observación");
        jTextFieldConceptoOBS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 2));

        jScrollPaneDescripcion.setBackground(new java.awt.Color(51, 153, 255));
        jScrollPaneDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        jScrollPaneDescripcion.setMaximumSize(new java.awt.Dimension(290, 21));
        jScrollPaneDescripcion.setMinimumSize(new java.awt.Dimension(290, 21));
        jScrollPaneDescripcion.setPreferredSize(new java.awt.Dimension(290, 21));

        jEditorPaneDescripcion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 2, true));
        jEditorPaneDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jEditorPaneDescripcion.setToolTipText("Descripción de la Observación");
        jEditorPaneDescripcion.setMaximumSize(new java.awt.Dimension(280, 19));
        jEditorPaneDescripcion.setMinimumSize(new java.awt.Dimension(280, 19));
        jEditorPaneDescripcion.setPreferredSize(new java.awt.Dimension(280, 19));
        jScrollPaneDescripcion.setViewportView(jEditorPaneDescripcion);

        jScrollPaneCausa.setBackground(new java.awt.Color(0, 153, 255));
        jScrollPaneCausa.setBorder(null);
        jScrollPaneCausa.setMaximumSize(new java.awt.Dimension(290, 32767));
        jScrollPaneCausa.setMinimumSize(new java.awt.Dimension(290, 22));
        jScrollPaneCausa.setPreferredSize(new java.awt.Dimension(290, 14));

        jEditorPaneCausa.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 2, true));
        jEditorPaneCausa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jEditorPaneCausa.setToolTipText("Causa de la Observación");
        jEditorPaneCausa.setMaximumSize(new java.awt.Dimension(280, 14));
        jEditorPaneCausa.setMinimumSize(new java.awt.Dimension(280, 14));
        jEditorPaneCausa.setPreferredSize(new java.awt.Dimension(280, 14));
        jScrollPaneCausa.setViewportView(jEditorPaneCausa);

        jLabelNormatividadQNSC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelNormatividadQNSC.setText("Normatividad que no se cumplió");
        jLabelNormatividadQNSC.setToolTipText("");

        jScrollPaneEfecto.setBackground(new java.awt.Color(0, 153, 255));
        jScrollPaneEfecto.setBorder(null);
        jScrollPaneEfecto.setMaximumSize(new java.awt.Dimension(290, 22));
        jScrollPaneEfecto.setMinimumSize(new java.awt.Dimension(290, 22));
        jScrollPaneEfecto.setPreferredSize(new java.awt.Dimension(290, 19));

        jEditorPaneEfecto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 2, true));
        jEditorPaneEfecto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jEditorPaneEfecto.setMaximumSize(new java.awt.Dimension(280, 19));
        jEditorPaneEfecto.setMinimumSize(new java.awt.Dimension(280, 19));
        jEditorPaneEfecto.setPreferredSize(new java.awt.Dimension(280, 19));
        jScrollPaneEfecto.setViewportView(jEditorPaneEfecto);

        jLabelDescripcionObs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDescripcionObs.setForeground(new java.awt.Color(51, 153, 255));
        jLabelDescripcionObs.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDescripcionObs.setText("Descripción:");
        jLabelDescripcionObs.setToolTipText("");

        jLabelCausaObs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCausaObs.setForeground(new java.awt.Color(51, 153, 255));
        jLabelCausaObs.setText("Causa:");

        jLabelEfectoOBS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelEfectoOBS.setForeground(new java.awt.Color(51, 153, 255));
        jLabelEfectoOBS.setText("Efecto:");

        jLabelTitleOBS.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabelTitleOBS.setForeground(new java.awt.Color(255, 0, 51));
        jLabelTitleOBS.setText("Observación");

        jTextPaneNormatividadQNSC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 2));
        jScrollPaneNormatividadQNSC.setViewportView(jTextPaneNormatividadQNSC);

        jButtonObservacionOK.setBackground(new java.awt.Color(255, 255, 255));
        jButtonObservacionOK.setForeground(new java.awt.Color(51, 153, 255));
        jButtonObservacionOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/ImagenesApp/palomitaAceptar.png"))); // NOI18N
        jButtonObservacionOK.setText("Aceptar");
        jButtonObservacionOK.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 153, 255), new java.awt.Color(153, 204, 255)));
        jButtonObservacionOK.setMaximumSize(new java.awt.Dimension(107, 31));
        jButtonObservacionOK.setMinimumSize(new java.awt.Dimension(107, 31));
        jButtonObservacionOK.setPreferredSize(new java.awt.Dimension(107, 31));
        jButtonObservacionOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObservacionOKActionPerformed(evt);
            }
        });

        jButtonObservacionCancelar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonObservacionCancelar.setForeground(new java.awt.Color(51, 153, 255));
        jButtonObservacionCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/ImagenesApp/tache.png"))); // NOI18N
        jButtonObservacionCancelar.setText("Cancelar");
        jButtonObservacionCancelar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 153, 255), new java.awt.Color(153, 204, 255)));
        jButtonObservacionCancelar.setPreferredSize(new java.awt.Dimension(107, 31));
        jButtonObservacionCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObservacionCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelObservationLayout = new javax.swing.GroupLayout(jPanelObservation);
        jPanelObservation.setLayout(jPanelObservationLayout);
        jPanelObservationLayout.setHorizontalGroup(
            jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanelObservationLayout.createSequentialGroup()
                    .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelEfectoOBS)
                        .addGroup(jPanelObservationLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelTitleOBS)
                                .addComponent(jButtonObservacionCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPaneEfecto, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(44, 44, 44))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelObservationLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabelConcepto)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextFieldConceptoOBS, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanelObservationLayout.createSequentialGroup()
                .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCausaObs)
                    .addComponent(jLabelDescripcionObs)
                    .addComponent(jLabelNormatividadQNSC)
                    .addGroup(jPanelObservationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonObservacionOK, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPaneNormatividadQNSC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPaneCausa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPaneDescripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(9, 9, 9))
        );
        jPanelObservationLayout.setVerticalGroup(
            jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitleOBS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldConceptoOBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelConcepto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelDescripcionObs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCausaObs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCausa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelEfectoOBS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneEfecto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNormatividadQNSC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneNormatividadQNSC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelObservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonObservacionCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonObservacionOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialogObservationAlert.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialogObservationAlert.setTitle("ALERTA OBS");
        jDialogObservationAlert.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jDialogObservationAlert.setMinimumSize(new java.awt.Dimension(440, 230));
        jDialogObservationAlert.setType(java.awt.Window.Type.POPUP);

        jPanelOBSAlert.setBackground(new java.awt.Color(51, 153, 255));

        jButtonSimbolAlert.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSimbolAlert.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSimbolAlert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/ImagenesApp/yellow-alert.png"))); // NOI18N
        jButtonSimbolAlert.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jButtonSimbolAlert.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonSimbolAlert.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonSimbolAlert.setPreferredSize(new java.awt.Dimension(100, 100));

        jButtonAceptarOBSAlert.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAceptarOBSAlert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAceptarOBSAlert.setText("Aceptar");
        jButtonAceptarOBSAlert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarOBSAlertActionPerformed(evt);
            }
        });

        jScrollPaneTextAlertOBS.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTextAlertOBS.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPaneTextAlertOBS.setAutoscrolls(true);
        jScrollPaneTextAlertOBS.setMaximumSize(new java.awt.Dimension(290, 200));
        jScrollPaneTextAlertOBS.setMinimumSize(new java.awt.Dimension(290, 200));
        jScrollPaneTextAlertOBS.setPreferredSize(new java.awt.Dimension(290, 200));

        jTextAreaTextAlertOBS.setEditable(false);
        jTextAreaTextAlertOBS.setColumns(20);
        jTextAreaTextAlertOBS.setRows(5);
        jTextAreaTextAlertOBS.setMaximumSize(new java.awt.Dimension(280, 190));
        jTextAreaTextAlertOBS.setMinimumSize(new java.awt.Dimension(280, 190));
        jTextAreaTextAlertOBS.setPreferredSize(new java.awt.Dimension(280, 190));
        jScrollPaneTextAlertOBS.setViewportView(jTextAreaTextAlertOBS);

        javax.swing.GroupLayout jPanelOBSAlertLayout = new javax.swing.GroupLayout(jPanelOBSAlert);
        jPanelOBSAlert.setLayout(jPanelOBSAlertLayout);
        jPanelOBSAlertLayout.setHorizontalGroup(
            jPanelOBSAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOBSAlertLayout.createSequentialGroup()
                .addGroup(jPanelOBSAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOBSAlertLayout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(jButtonAceptarOBSAlert))
                    .addGroup(jPanelOBSAlertLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSimbolAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPaneTextAlertOBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelOBSAlertLayout.setVerticalGroup(
            jPanelOBSAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOBSAlertLayout.createSequentialGroup()
                .addGroup(jPanelOBSAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOBSAlertLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneTextAlertOBS, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOBSAlertLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButtonSimbolAlert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAceptarOBSAlert)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogObservationAlertLayout = new javax.swing.GroupLayout(jDialogObservationAlert.getContentPane());
        jDialogObservationAlert.getContentPane().setLayout(jDialogObservationAlertLayout);
        jDialogObservationAlertLayout.setHorizontalGroup(
            jDialogObservationAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogObservationAlertLayout.createSequentialGroup()
                .addComponent(jPanelOBSAlert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialogObservationAlertLayout.setVerticalGroup(
            jDialogObservationAlertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelOBSAlert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanelArchivosRecientes.setBackground(new java.awt.Color(255, 255, 255));
        jPanelArchivosRecientes.setMaximumSize(new java.awt.Dimension(341, 540));
        jPanelArchivosRecientes.setMinimumSize(new java.awt.Dimension(341, 540));
        jPanelArchivosRecientes.setPreferredSize(new java.awt.Dimension(341, 540));

        jLabelArchivosRecientes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelArchivosRecientes.setForeground(new java.awt.Color(51, 153, 255));
        jLabelArchivosRecientes.setText("Archivos Recientes");

        jPanelListArchivosRecientes.setBackground(new java.awt.Color(255, 255, 255));
        jPanelListArchivosRecientes.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 204, 255), new java.awt.Color(0, 153, 255)));
        jPanelListArchivosRecientes.setForeground(new java.awt.Color(255, 255, 255));
        jPanelListArchivosRecientes.setAutoscrolls(true);
        jPanelListArchivosRecientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanelListArchivosRecientes.setMaximumSize(new java.awt.Dimension(320, 370));
        jPanelListArchivosRecientes.setMinimumSize(new java.awt.Dimension(320, 370));
        jPanelListArchivosRecientes.setPreferredSize(new java.awt.Dimension(320, 370));

        javax.swing.GroupLayout jPanelListArchivosRecientesLayout = new javax.swing.GroupLayout(jPanelListArchivosRecientes);
        jPanelListArchivosRecientes.setLayout(jPanelListArchivosRecientesLayout);
        jPanelListArchivosRecientesLayout.setHorizontalGroup(
            jPanelListArchivosRecientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelListArchivosRecientesLayout.setVerticalGroup(
            jPanelListArchivosRecientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelArchivosRecientesLayout = new javax.swing.GroupLayout(jPanelArchivosRecientes);
        jPanelArchivosRecientes.setLayout(jPanelArchivosRecientesLayout);
        jPanelArchivosRecientesLayout.setHorizontalGroup(
            jPanelArchivosRecientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArchivosRecientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelArchivosRecientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelListArchivosRecientes, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addGroup(jPanelArchivosRecientesLayout.createSequentialGroup()
                        .addComponent(jLabelArchivosRecientes)
                        .addGap(0, 192, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelArchivosRecientesLayout.setVerticalGroup(
            jPanelArchivosRecientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArchivosRecientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelArchivosRecientes)
                .addGap(30, 30, 30)
                .addComponent(jPanelListArchivosRecientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIGA MARK5");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 153, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1366, 800));
        setMinimumSize(new java.awt.Dimension(1366, 800));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("sigaMak5"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1366, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jInternalFrameMarksEditor.setBackground(new java.awt.Color(51, 102, 255));
        jInternalFrameMarksEditor.setBorder(null);
        jInternalFrameMarksEditor.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrameMarksEditor.setToolTipText("");
        jInternalFrameMarksEditor.setAlignmentX(0.0F);
        jInternalFrameMarksEditor.setAlignmentY(0.0F);
        jInternalFrameMarksEditor.setMinimumSize(new java.awt.Dimension(1590, 1000));
        jInternalFrameMarksEditor.setVisible(false);
        jInternalFrameMarksEditor.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MarkBottonVDF.setBackground(new java.awt.Color(47, 60, 105));
        MarkBottonVDF.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MarkBottonVDF.setMaximumSize(new java.awt.Dimension(800, 1024));
        MarkBottonVDF.setMinimumSize(new java.awt.Dimension(800, 1024));
        MarkBottonVDF.setName("SimbolsPanel"); // NOI18N
        MarkBottonVDF.setPreferredSize(new java.awt.Dimension(935, 94));

        MarkBottonVCDF.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonVCDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VDF.png"))); // NOI18N
        MarkBottonVCDF.setToolTipText("Verificado con Documentación");
        MarkBottonVCDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVCDFActionPerformed(evt);
            }
        });

        MarkBottonVEF.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonVEF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VEF.png"))); // NOI18N
        MarkBottonVEF.setToolTipText("Verificado con Estados Financieros");
        MarkBottonVEF.setMaximumSize(new java.awt.Dimension(59, 67));
        MarkBottonVEF.setMinimumSize(new java.awt.Dimension(59, 67));
        MarkBottonVEF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVEFActionPerformed(evt);
            }
        });

        MarkBottonVCRC.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonVCRC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VRC.png"))); // NOI18N
        MarkBottonVCRC.setToolTipText("Verificado con registros contables");
        MarkBottonVCRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVCRCActionPerformed(evt);
            }
        });

        MarkBottonVCRP.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonVCRP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VRP.png"))); // NOI18N
        MarkBottonVCRP.setToolTipText("Verificado con Registros Presupustales");
        MarkBottonVCRP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVCRPActionPerformed(evt);
            }
        });

        MarkBottonVF.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonVF.setForeground(new java.awt.Color(255, 255, 255));
        MarkBottonVF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VF.png"))); // NOI18N
        MarkBottonVF.setToolTipText("Verificado Físicamente");
        MarkBottonVF.setMaximumSize(new java.awt.Dimension(43, 43));
        MarkBottonVF.setMinimumSize(new java.awt.Dimension(43, 43));
        MarkBottonVF.setPreferredSize(new java.awt.Dimension(43, 43));
        MarkBottonVF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVFActionPerformed(evt);
            }
        });

        MarkBottonOAV.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonOAV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/OAV.png"))); // NOI18N
        MarkBottonOAV.setToolTipText("Operación aritmética verificada");
        MarkBottonOAV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonOAVActionPerformed(evt);
            }
        });

        MarkBottonPDA.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonPDA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/PAcl.png"))); // NOI18N
        MarkBottonPDA.setToolTipText("Pendiente de  Aclarar");
        MarkBottonPDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonPDAActionPerformed(evt);
            }
        });

        MarkBottonPA.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonPA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/PA.png"))); // NOI18N
        MarkBottonPA.setToolTipText("Pendiente Atendido");
        MarkBottonPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonPAActionPerformed(evt);
            }
        });

        MarkBottonDR.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonDR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/DR.png"))); // NOI18N
        MarkBottonDR.setToolTipText("Documento Revisado");
        MarkBottonDR.setMaximumSize(new java.awt.Dimension(59, 67));
        MarkBottonDR.setMinimumSize(new java.awt.Dimension(59, 67));
        MarkBottonDR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonDRActionPerformed(evt);
            }
        });

        MarkBottonCPC.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonCPC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/CC.png"))); // NOI18N
        MarkBottonCPC.setToolTipText("Confirmación por Compulsa");
        MarkBottonCPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonCPCActionPerformed(evt);
            }
        });

        MarkBottonDDCIOH.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonDDCIOH.setForeground(new java.awt.Color(153, 204, 255));
        MarkBottonDDCIOH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/OSB.png"))); // NOI18N
        MarkBottonDDCIOH.setToolTipText("Observación. Debilidad de control interno o hallazgo.");
        MarkBottonDDCIOH.setMaximumSize(new java.awt.Dimension(59, 67));
        MarkBottonDDCIOH.setMinimumSize(new java.awt.Dimension(59, 67));
        MarkBottonDDCIOH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonDDCIOHActionPerformed(evt);
            }
        });

        MarkBottonDQNRR.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonDQNRR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/DNRR.png"))); // NOI18N
        MarkBottonDQNRR.setToolTipText("Documentación que no reúne requisitos fiscales, normativos o de control");
        MarkBottonDQNRR.setMaximumSize(new java.awt.Dimension(34, 34));
        MarkBottonDQNRR.setMinimumSize(new java.awt.Dimension(34, 34));
        MarkBottonDQNRR.setPreferredSize(new java.awt.Dimension(123, 75));
        MarkBottonDQNRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonDQNRRActionPerformed(evt);
            }
        });

        MarkBottonAIQNDC.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonAIQNDC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/AIQDC.png"))); // NOI18N
        MarkBottonAIQNDC.setToolTipText("Anotaciones Incorrectas que no deben considerarse");
        MarkBottonAIQNDC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonAIQNDCActionPerformed(evt);
            }
        });

        MarkBottonNotasA.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonNotasA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/NAcl.png"))); // NOI18N
        MarkBottonNotasA.setToolTipText("Notas Aclaratorias");
        MarkBottonNotasA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonNotasAActionPerformed(evt);
            }
        });

        MarkBottonFDDEI.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonFDDEI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/FDI.png"))); // NOI18N
        MarkBottonFDDEI.setToolTipText("Fuente de Datos de Información");
        MarkBottonFDDEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonFDDEIActionPerformed(evt);
            }
        });

        MarkBottonNA.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonNA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/NA.png"))); // NOI18N
        MarkBottonNA.setToolTipText("No Aplica");
        MarkBottonNA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonNAActionPerformed(evt);
            }
        });

        MarkBottonFDD.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonFDD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/FD.png"))); // NOI18N
        MarkBottonFDD.setToolTipText("Faltante de Documento");
        MarkBottonFDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonFDDActionPerformed(evt);
            }
        });

        MarkBottonDDPAI.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonDDPAI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/DDAI.png"))); // NOI18N
        MarkBottonDDPAI.setToolTipText("Diferencia Determinada por Auditoria Interna");
        MarkBottonDDPAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonDDPAIActionPerformed(evt);
            }
        });

        MarkBottonSuma.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonSuma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/SUMA.png"))); // NOI18N
        MarkBottonSuma.setToolTipText("Suma");
        MarkBottonSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonSumaActionPerformed(evt);
            }
        });

        MarkBottonVS.setBackground(new java.awt.Color(255, 255, 255));
        MarkBottonVS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/VS.png"))); // NOI18N
        MarkBottonVS.setToolTipText("Verificado con Sistema");
        MarkBottonVS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonVSActionPerformed(evt);
            }
        });

        MarkBottonSPA.setBackground(new java.awt.Color(204, 204, 204));
        MarkBottonSPA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/marksIconsFile/SPA.png"))); // NOI18N
        MarkBottonSPA.setToolTipText("Seleccionado para Análisis");
        MarkBottonSPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkBottonSPAActionPerformed(evt);
            }
        });

        QuitarBoton_AbrirDocumento.setText("Abrir archivo");
        QuitarBoton_AbrirDocumento.setToolTipText("Abre un archivo pre dispuesto");
        QuitarBoton_AbrirDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarBoton_AbrirDocumentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MarkBottonVDFLayout = new javax.swing.GroupLayout(MarkBottonVDF);
        MarkBottonVDF.setLayout(MarkBottonVDFLayout);
        MarkBottonVDFLayout.setHorizontalGroup(
            MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MarkBottonVEF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MarkBottonVF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonVCRC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonVCRP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonDQNRR, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MarkBottonSPA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonNotasA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonFDDEI, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonVCDF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonFDD, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonOAV, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonNA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonDDPAI, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonPDA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonPA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonDR, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkBottonAIQNDC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MarkBottonDDCIOH, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addComponent(MarkBottonCPC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(MarkBottonVS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(QuitarBoton_AbrirDocumento)
                .addContainerGap())
        );
        MarkBottonVDFLayout.setVerticalGroup(
            MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MarkBottonVCDF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonFDD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonNA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonPDA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonDR, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MarkBottonDQNRR, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonVCRP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonNotasA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonSPA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(MarkBottonCPC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MarkBottonVDFLayout.createSequentialGroup()
                                .addComponent(MarkBottonAIQNDC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                                .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MarkBottonPA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonOAV, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MarkBottonDDCIOH, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(QuitarBoton_AbrirDocumento))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MarkBottonVS, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonDDPAI, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MarkBottonVDFLayout.createSequentialGroup()
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MarkBottonFDDEI, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonVF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MarkBottonVDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MarkBottonVEF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MarkBottonVCRC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 933, Short.MAX_VALUE))
        );

        jInternalFrameMarksEditor.getContentPane().add(MarkBottonVDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 0, 930, -1));

        jLayeredPaneDrawArea.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPaneDrawArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 168, 37), null, null));
        jLayeredPaneDrawArea.setForeground(new java.awt.Color(255, 255, 255));
        jLayeredPaneDrawArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLayeredPaneDrawArea.setMaximumSize(new java.awt.Dimension(1200, 2000));
        jLayeredPaneDrawArea.setMinimumSize(new java.awt.Dimension(1200, 2000));
        jLayeredPaneDrawArea.setName("LayeredPanelMarks"); // NOI18N
        jLayeredPaneDrawArea.setOpaque(true);
        jLayeredPaneDrawArea.setPreferredSize(new java.awt.Dimension(1200, 1070));
        jLayeredPaneDrawArea.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jLayeredPaneDrawAreaMouseWheelMoved(evt);
            }
        });

        DrawPanel.setBackground(new java.awt.Color(255, 255, 255));
        DrawPanel.setForeground(new java.awt.Color(255, 255, 255));
        DrawPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        DrawPanel.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        DrawPanel.setMaximumSize(new java.awt.Dimension(1200, 1000));
        DrawPanel.setMinimumSize(new java.awt.Dimension(1200, 1000));
        DrawPanel.setNextFocusableComponent(PDFPanel);
        DrawPanel.setOpaque(false);
        DrawPanel.setPreferredSize(new java.awt.Dimension(PDFPanel.getPreferredSize().width, PDFPanel.getPreferredSize().height));
        DrawPanel.setVerifyInputWhenFocusTarget(false);
        DrawPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DrawPanelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrawPanelMouseClicked(evt);
            }
        });
        DrawPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DrawPanelMouseDragged(evt);
            }
        });

        //DrawPanel.add(PaintMarkComponent);

        javax.swing.GroupLayout DrawPanelLayout = new javax.swing.GroupLayout(DrawPanel);
        DrawPanel.setLayout(DrawPanelLayout);
        DrawPanelLayout.setHorizontalGroup(
            DrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        DrawPanelLayout.setVerticalGroup(
            DrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jLayeredPaneDrawArea.add(DrawPanel);
        DrawPanel.setBounds(0, 0, 935, 1000);
        jLayeredPaneDrawArea.setLayer(DrawPanel, javax.swing.JLayeredPane.DRAG_LAYER);
        DrawPanel.getAccessibleContext().setAccessibleName("");
        DrawPanel.getAccessibleContext().setAccessibleDescription("");

        PDFPanel.setBackground(new java.awt.Color(255, 255, 255));
        PDFPanel.setForeground(new java.awt.Color(255, 255, 255));
        PDFPanel.setAutoscrolls(false);
        PDFPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PDFPanel.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        PDFPanel.setDoubleBuffered(false);
        PDFPanel.setEnabled(false);
        PDFPanel.setMaximumSize(new java.awt.Dimension(1200, 1000));
        PDFPanel.setMinimumSize(new java.awt.Dimension(1200, 1000));
        PDFPanel.setName("PDFPanel"); // NOI18N
        PDFPanel.setOpaque(false);
        PDFPanel.setPreferredSize(new java.awt.Dimension(1200, 1000));
        PDFPanel.setRequestFocusEnabled(false);
        PDFPanel.setVerifyInputWhenFocusTarget(false);
        PDFPanel.setLayout(new java.awt.GridLayout(1, 0));

        PDFFondObj.setBackground(new java.awt.Color(255, 255, 255));
        PDFPanel.add(PDFFondObj);//*Agrega la pagina PDFFondObj al Panel al iniciar

        ///////////////////////////////////////

        jLayeredPaneDrawArea.add(PDFPanel);
        PDFPanel.setBounds(0, 0, 935, 1000);
        PDFPanel.getAccessibleContext().setAccessibleName("");
        PDFPanel.getAccessibleContext().setAccessibleDescription("");

        jInternalFrameMarksEditor.getContentPane().add(jLayeredPaneDrawArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 100, 935, 440));
        jLayeredPaneDrawArea.getAccessibleContext().setAccessibleName("");

        jButtonSiguiente.setBackground(new java.awt.Color(204, 204, 204));
        jButtonSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/ImagenesApp/flechaD.png"))); // NOI18N
        jButtonSiguiente.setAutoscrolls(true);
        jButtonSiguiente.setBorder(null);
        jButtonSiguiente.setBorderPainted(false);
        jButtonSiguiente.setContentAreaFilled(false);
        jButtonSiguiente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSiguiente.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonSiguiente.setRequestFocusEnabled(false);
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });
        jInternalFrameMarksEditor.getContentPane().add(jButtonSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 550, -1, -1));

        jButtonAnterior.setBackground(new java.awt.Color(204, 204, 204));
        jButtonAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/ImagenesApp/flechaI.png"))); // NOI18N
        jButtonAnterior.setBorderPainted(false);
        jButtonAnterior.setContentAreaFilled(false);
        jButtonAnterior.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAnterior.setPreferredSize(new java.awt.Dimension(85, 23));
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });
        jInternalFrameMarksEditor.getContentPane().add(jButtonAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, 50, 50));
        jButtonAnterior.getAccessibleContext().setAccessibleParent(this);

        jSliderPDFMarks.setBackground(new java.awt.Color(255, 168, 37));
        jSliderPDFMarks.setForeground(new java.awt.Color(51, 204, 255));
        jSliderPDFMarks.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderPDFMarks.setPaintTicks(true);
        jSliderPDFMarks.setSnapToTicks(true);
        jSliderPDFMarks.setToolTipText("");
        jSliderPDFMarks.setValue(100);
        jSliderPDFMarks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSliderPDFMarks.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderPDFMarksStateChanged(evt);
            }
        });
        jInternalFrameMarksEditor.getContentPane().add(jSliderPDFMarks, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 110, 25, 430));

        jTabbedPane1.setBackground(new java.awt.Color(51, 102, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Administración"));
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(341, 650));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(341, 650));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(341, 540));
        jInternalFrameMarksEditor.getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 341, 650));

        DrawPanel1.setBackground(new java.awt.Color(255, 255, 204));
        DrawPanel1.setForeground(new java.awt.Color(255, 255, 255));
        DrawPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        DrawPanel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        DrawPanel1.setMaximumSize(new java.awt.Dimension(1200, 1000));
        DrawPanel1.setMinimumSize(new java.awt.Dimension(1200, 1000));
        DrawPanel1.setNextFocusableComponent(PDFPanel);
        DrawPanel1.setOpaque(false);
        DrawPanel1.setPreferredSize(new java.awt.Dimension(PDFPanel.getPreferredSize().width, PDFPanel.getPreferredSize().height));
        DrawPanel1.setVerifyInputWhenFocusTarget(false);
        DrawPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DrawPanelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrawPanelMouseClicked(evt);
            }
        });
        DrawPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DrawPanelMouseDragged(evt);
            }
        });

        //DrawPanel.add(PaintMarkComponent);

        javax.swing.GroupLayout DrawPanel1Layout = new javax.swing.GroupLayout(DrawPanel1);
        DrawPanel1.setLayout(DrawPanel1Layout);
        DrawPanel1Layout.setHorizontalGroup(
            DrawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        DrawPanel1Layout.setVerticalGroup(
            DrawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jInternalFrameMarksEditor.getContentPane().add(DrawPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 935, 1000));
        DrawPanel1.getAccessibleContext().setAccessibleName("");
        DrawPanel1.getAccessibleContext().setAccessibleDescription("");

        PDFPanel1.setBackground(new java.awt.Color(255, 255, 255));
        PDFPanel1.setForeground(new java.awt.Color(255, 255, 255));
        PDFPanel1.setAutoscrolls(false);
        PDFPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PDFPanel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        PDFPanel1.setDoubleBuffered(false);
        PDFPanel1.setEnabled(false);
        PDFPanel1.setMaximumSize(new java.awt.Dimension(1200, 1000));
        PDFPanel1.setMinimumSize(new java.awt.Dimension(1200, 1000));
        PDFPanel1.setName("PDFPanel"); // NOI18N
        PDFPanel1.setOpaque(false);
        PDFPanel1.setPreferredSize(new java.awt.Dimension(1200, 1000));
        PDFPanel1.setRequestFocusEnabled(false);
        PDFPanel1.setVerifyInputWhenFocusTarget(false);
        PDFPanel1.setLayout(new java.awt.GridLayout(1, 0));

        PDFFondObj.setBackground(new java.awt.Color(255, 255, 255));
        PDFPanel.add(PDFFondObj);//*Agrega la pagina PDFFondObj al Panel al iniciar

        ///////////////////////////////////////

        jInternalFrameMarksEditor.getContentPane().add(PDFPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 935, 1000));
        PDFPanel1.getAccessibleContext().setAccessibleName("");
        PDFPanel1.getAccessibleContext().setAccessibleDescription("");

        MenuBarrNorthInternalFrameMarks.setBackground(new java.awt.Color(0, 204, 255));
        MenuBarrNorthInternalFrameMarks.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MenuBarrNorthInternalFrameMarks.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jMenuProgramaDeRevisiones.setText("Programa de Revisiones                  ");
        jMenuProgramaDeRevisiones.add(jSeparator1);

        MenuBarrNorthInternalFrameMarks.add(jMenuProgramaDeRevisiones);

        jMenuConsultaTrabajos.setText("Consultar Trabajos                  ");
        jMenuConsultaTrabajos.add(jSeparator2);

        MenuBarrNorthInternalFrameMarks.add(jMenuConsultaTrabajos);

        jMenuTrabajosEnEjecucion.setText(" Trabajos               ");
        jMenuTrabajosEnEjecucion.add(jSeparator3);

        jMenuItem1.setText("Ver trabajos en ejecución");
        jMenuTrabajosEnEjecucion.add(jMenuItem1);

        MenuBarrNorthInternalFrameMarks.add(jMenuTrabajosEnEjecucion);

        jMenuConsultarInformesYObservaciones.setText("Consultar Informes y  Observaciones");
        jMenuConsultarInformesYObservaciones.add(jSeparator4);

        MenuBarrNorthInternalFrameMarks.add(jMenuConsultarInformesYObservaciones);

        jInternalFrameMarksEditor.setJMenuBar(MenuBarrNorthInternalFrameMarks);
        MenuBarrNorthInternalFrameMarks.getAccessibleContext().setAccessibleName("");
        MenuBarrNorthInternalFrameMarks.getAccessibleContext().setAccessibleDescription("Menu Principal del Frame de marcas");
        MenuBarrNorthInternalFrameMarks.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(jInternalFrameMarksEditor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1566, 850));

        jPanelLogin.setBackground(new java.awt.Color(0, 51, 204));
        jPanelLogin.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelLogin.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanelLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelUserRecuest.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelUserRecuest.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUserRecuest.setText("Usuario:");
        jPanelLogin.add(jLabelUserRecuest, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));

        jLabelPasswodrRecuest.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelPasswodrRecuest.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPasswodrRecuest.setText("Constraseña:");
        jPanelLogin.add(jLabelPasswodrRecuest, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, -1, -1));

        jTextFieldUser.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextFieldUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextFieldUser.setMaximumSize(new java.awt.Dimension(2, 27));
        jTextFieldUser.setName(""); // NOI18N
        jPanelLogin.add(jTextFieldUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 290, 210, -1));

        jPasswordLogin.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPasswordLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPasswordLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPasswordLogin.setMinimumSize(new java.awt.Dimension(2, 27));
        jPasswordLogin.setPreferredSize(new java.awt.Dimension(2, 27));
        jPasswordLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordLoginActionPerformed(evt);
            }
        });
        jPanelLogin.add(jPasswordLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, 210, -1));

        jButtonEntrar.setBackground(new java.awt.Color(153, 204, 255));
        jButtonEntrar.setFont(new java.awt.Font("Tahoma", 1, 55)); // NOI18N
        jButtonEntrar.setForeground(new java.awt.Color(0, 102, 153));
        jButtonEntrar.setText("Entrar");
        jButtonEntrar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jButtonEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEntrarActionPerformed(evt);
            }
        });
        jPanelLogin.add(jButtonEntrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, 530, 110));

        jButtonFondoFrame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIGAMARKS2/logo/fondoLoginFrame.png"))); // NOI18N
        jButtonFondoFrame.setMaximumSize(new java.awt.Dimension(1366, 766));
        jButtonFondoFrame.setMinimumSize(new java.awt.Dimension(1366, 766));
        jButtonFondoFrame.setPreferredSize(new java.awt.Dimension(1399, 768));
        jPanelLogin.add(jButtonFondoFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        getContentPane().add(jPanelLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));
        jPanelLogin.getAccessibleContext().setAccessibleDescription("");

        jLabelSIGAAuditoriaUNAM.setText("SIGA UNAM");
        getContentPane().add(jLabelSIGAAuditoriaUNAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 830, -1, -1));

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MarkBottonVSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVSActionPerformed
        SetMark("VS.png");
        idMarcaSelected = 1;//VS
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVSActionPerformed

    private void MarkBottonDDPAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonDDPAIActionPerformed
        SetMark("DDAI.png");
        idMarcaSelected = 2;//DDAI
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonDDPAIActionPerformed

    private void MarkBottonAIQNDCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonAIQNDCActionPerformed
        SetMark("AIQDC.png");
        idMarcaSelected = 3;//AIQDC
        newMarkB = true;
        isAnotacionIncorrecta = true;
    }//GEN-LAST:event_MarkBottonAIQNDCActionPerformed

    private void MarkBottonOAVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonOAVActionPerformed
        // TODO add your handling code here:
        SetMark("OAV.png");
        idMarcaSelected = 4;//OAV
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonOAVActionPerformed

    /**
     * Método para boton página anterior -Carga página nueva -Reajusta scroll
     * -Dibuja Marcas
     *
     * @param evt
     */
    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        if (fileSelectedBoolean) {
            PDFFondObj.paintPreviusPage();
            updateMarkList();
            listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
            drawMarks();
        }
        jSliderPDFMarks.setValue(100);
        jSliderPDFMarks.repaint();
    }//GEN-LAST:event_jButtonAnteriorActionPerformed
    /**
     * Método de acción para boton página Siguiente -Carga página nueva
     * -Reajusta scroll -Dibuja Marcas de página.
     *
     * @param evt
     */
    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        if (fileSelectedBoolean) {
            PDFFondObj.paintNextPage();
            updateMarkList();
            listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
            drawMarks();
        }
        jSliderPDFMarks.setValue(100);//Regresa el boton de arrastre a inicio
        jSliderPDFMarks.repaint();
    }//GEN-LAST:event_jButtonSiguienteActionPerformed
//Accion despues de elegir un archivo el el FileChooser

    /**
     * ////////////////////////////////////////////////////////////////////////
     * Método para dibujar marcas cargadas en marksPageDraw
     * /////////////////////////////////////////////////////////////////////////
     */
    public void drawMarks() {
        DrawPanel.setVisible(false);
        DrawPanel.remove(marksPageDrawPanel);
        marksPageDrawPanel = new MarksPageDraw(PDFPanel, listMarkPage, pathMarks);
        DrawPanel.add(marksPageDrawPanel);
        PDFPanel.setLocation(20, -((int) desliceDocumentOnY));
        DrawPanel.setLocation(20, -((int) desliceDocumentOnY));
        DrawPanel.setVisible(true);
    }

    /**
     * Actualiza la lista de marcas a dibujar
     *
     */
    private void updateMarkList() {
        marksPageDrawPanel.setMarksList(ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice()));
    }

    private void MarkBottonVFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVFActionPerformed
        SetMark("VF.png");
        idMarcaSelected = 22;//VFA
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVFActionPerformed

    private void MarkBottonFDDEIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonFDDEIActionPerformed
        // TODO add your handling code here:
        SetMark("FDI.png");
        idMarcaSelected = 6;//FDI
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonFDDEIActionPerformed

    private void MarkBottonVEFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVEFActionPerformed
        // TODO add your handling code here:
        SetMark("VEF.png");
        idMarcaSelected = 7;//VEF
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVEFActionPerformed

    private void MarkBottonVCRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVCRCActionPerformed
        // TODO add your handling code here:
        SetMark("VRC.png");
        idMarcaSelected = 8;//VRC
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVCRCActionPerformed

    private void MarkBottonVCDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVCDFActionPerformed
        // TODO add your handling code here:
        SetMark("VDF.png");//VDF
        idMarcaSelected = 9;
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVCDFActionPerformed
/////Marca especil de observaciones
    private void MarkBottonDDCIOHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonDDCIOHActionPerformed
        // TODO add your handling code here:
        SetMark("OBS.png");//OBS
        idMarcaSelected = 10;
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonDDCIOHActionPerformed

//Muestra la referencia de marcas al dar clik sobre el boton de referencias 
    private void MarkBottonFDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonFDDActionPerformed
        // TODO add your handling code here:
        SetMark("FD.png");
        idMarcaSelected = 11;//FD
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonFDDActionPerformed

    private void MarkBottonNAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonNAActionPerformed
        SetMark("NA.png");
        idMarcaSelected = 12;//NA
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonNAActionPerformed

    private void MarkBottonPDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonPDAActionPerformed
        SetMark("PAcl.png");
        idMarcaSelected = 13;//PAcl
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonPDAActionPerformed

    private void MarkBottonPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonPAActionPerformed
        SetMark("PA.png");
        idMarcaSelected = 14;//PA
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonPAActionPerformed

    private void MarkBottonDRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonDRActionPerformed
        SetMark("DR.png");
        idMarcaSelected = 15;//DR
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonDRActionPerformed

    private void MarkBottonVCRPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonVCRPActionPerformed
        SetMark("VRP.png");
        idMarcaSelected = 16;//VRP
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonVCRPActionPerformed

    private void MarkBottonDQNRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonDQNRRActionPerformed
        SetMark("DNRR.png");
        idMarcaSelected = 17;//DNRR
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonDQNRRActionPerformed

    private void MarkBottonSPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonSPAActionPerformed
        SetMark("SPA.png");
        idMarcaSelected = 18;//SPA
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonSPAActionPerformed

    private void MarkBottonNotasAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonNotasAActionPerformed
        SetMark("NAcl.png");
        idMarcaSelected = 19;//NAcl
        newMarkB = true;
        isNotaAclaratoria = true;
    }//GEN-LAST:event_MarkBottonNotasAActionPerformed

    private void MarkBottonSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonSumaActionPerformed
        SetMark("SUMA.png");
        idMarcaSelected = 20;//SUMA
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonSumaActionPerformed

    private void MarkBottonCPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkBottonCPCActionPerformed
        SetMark("CC.png");
        idMarcaSelected = 21;//CC
        newMarkB = true;
    }//GEN-LAST:event_MarkBottonCPCActionPerformed

    private void jLayeredPaneDrawAreaMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jLayeredPaneDrawAreaMouseWheelMoved
        int a = evt.getWheelRotation();
        if (a < 0) {
            jSliderPDFMarks.setValue(jSliderPDFMarks.getValue() + 5);//Regresa el boton de arrastre a inicio
            jSliderPDFMarks.repaint();
        }
        if (a > 0) {
            jSliderPDFMarks.setValue(jSliderPDFMarks.getValue() - 5);//Regresa el boton de arrastre a inicio
            jSliderPDFMarks.repaint();
        }
    }//GEN-LAST:event_jLayeredPaneDrawAreaMouseWheelMoved

    /**
     * Boton de entrada al sistema SIGA Docs valida al usuario en la base de
     * datos reconoce y asigna a la variable usuario el objeto que representa al
     * usuario actual
     *
     * @param evt
     */
    private void jButtonEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEntrarActionPerformed
        accesToSystem();
    }//GEN-LAST:event_jButtonEntrarActionPerformed
    /**
     * Método para acceder al sistema de marcas validando por usuario y
     * contraseña
     */
    private void accesToSystem() {
        String login = jTextFieldUser.getText();
        System.out.println(" ..... usuario ingresado: " + login);
        char pass[] = jPasswordLogin.getPassword();
        System.out.println(" ..... contraseña ingresada: " + USRvalidator.passArrayToString(pass));
        USRvalidator usrvalidator = new USRvalidator();
        if (usrvalidator.isAValidUser(login, pass)) {
            usuario = usrvalidator.getUsuario();
            jPanelLogin.setVisible(false);
            jInternalFrameMarksEditor.setVisible(true);
            jPanelLogin.repaint();
            jInternalFrameMarksEditor.repaint();
        } else {
            jTextFieldUser.setText("");
            jPasswordLogin.setText("");
        }
    }

    private void DrawPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawPanelMouseDragged
        if (symbolSelectS != null && fileSelectedBoolean) {
            showMarkToAdd(evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_DrawPanelMouseDragged

    /**
     * Arrastra marcas con la flecha del mause sobre el panel de dibujo
     *
     */
    private void DrawPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawPanelMouseClicked
        markPosX = evt.getX();
        markPosY = evt.getY();

        if (symbolSelectS != null && fileSelectedBoolean) {//Valida que se seleccione un simbolo y que se tenga seleccionado un archivo
            showMarkToAdd(markPosX, markPosY);
        } else {
            //Busca si coincide con una marca existente para sacarla manupularla
            markSelectedDocumento = MarksValidations.searchCoincidence(documento,
                    PDFFondObj.getIndice(), evt.getX(), evt.getY());
            if (markSelectedDocumento != null) {
                setSymbolSelect(ApplicationMarks.getMarkName(markSelectedDocumento.getIdMarca().getIdMarca().intValue()) + ".png");
                SetMark(symbolSelectS);
                System.out.println("Marca agregada para edicion :" + symbolSelectS);
                newMarkB = false;
                showMarkToAdd(markPosX, markPosY);
            }
            if (isAnotacionIncorrecta) {//Acciones cuando se da click en un espacio en blanco y se ha seleccionado previamente una anotacion incorrecta
                markSelectedDocumentMaker(evt.getX(), evt.getY());
                markSelectedDocumentMaker(evt.getX(), evt.getY());
                markSelectedDocumento.setTexto(panelNotas.getjTextArea1().getText());
                Marca_DocumentoDAOImpl.getInstance().incert(markSelectedDocumento);
                panelNotas.setVisible(false);
                isAnotacionIncorrecta = false;
                updateMarkList();
            } else if (isNotaAclaratoria) {//Acciones cuando se da click en un espacio en blanco y se ha seleccionado previamente  una nota aclaratoria
                markSelectedDocumentMaker(evt.getX(), evt.getY());
                markSelectedDocumento.setTexto(panelNotas.getjTextArea1().getText());
                Marca_DocumentoDAOImpl.getInstance().incert(markSelectedDocumento);
                panelNotas.setVisible(false);
                //DrawPanel.remove(panelNotas);
                panelNotas = null;
                isNotaAclaratoria = false;
                updateMarkList();
            }
        }
        drawMarks();
    }//GEN-LAST:event_DrawPanelMouseClicked

    /**
     * Cuando el botón de mause es soltado realiza una axión sobre la marca
     * selexionada
     *
     * @param evt
     */
    private void DrawPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawPanelMouseReleased
        if (symbolSelectS != null && fileSelectedBoolean) {
            showMarkToAdd(evt.getX(), evt.getY());
            if (newMarkB) {
                if (MarksValidations.isSpecialMark(idMarcaSelected)) {
                    //Acciones para marcas especiales,m incluye agergar la marca a la 
                    //base de datos
                    markSelectedDocumentMaker(evt.getX(), evt.getY());
                    System.out.println(markSelectedDocumento.getIdMarca().getNombreMarca());
                    listMarkPage.add(markSelectedDocumento);
                    newSpecialMark();
                } else {
                    //Agrega la marca a la base de datos
                    MarcaDocumentoServiceImpl.getInstance().insert(documento.getIdDocumento().intValue(), new Integer(idMarcaSelected), evt.getX(), evt.getY(), (short) PDFFondObj.getIndice());
                    System.out.println("Marca agregada a base de datos");
                    listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
                }
                //Agrega la marca a la base de datos, valida tipo de marca 
                symbolSelectS = null;
                paneMarkToDraw.setVisible(false);
                drawMarks();
            } else {
                markSelectedDocumento.setPosicionX(new BigDecimal(evt.getX()));
                markSelectedDocumento.setPosicionY(new BigDecimal(evt.getY()));
                Marca_DocumentoDAOImpl.getInstance().update(markSelectedDocumento);
                symbolSelectS = null;
                paneMarkToDraw.setVisible(false);
                drawMarks();
            }

        }
    }//GEN-LAST:event_DrawPanelMouseReleased
    private void markSelectedDocumentMaker(int posX, int posY) {
        markSelectedDocumento = new MarcaDocumento();
        markSelectedDocumento.setPosicionX(new BigDecimal(posX));
        markSelectedDocumento.setPosicionY(new BigDecimal(posY));
        markSelectedDocumento.setNumPagina((short) PDFFondObj.getIndice());
        markSelectedDocumento.setIdMarca(MarcaDAOImpl.getInstance().select((int) idMarcaSelected));
        markSelectedDocumento.setIdDocumento(documento);
    }

    private void jButtonObservacionOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObservacionOKActionPerformed
        OBSvalidator.cleaner();
        OBSvalidator.setConcepto(ValidCharacters.validatingString(jTextFieldConceptoOBS.getText()));
        OBSvalidator.setDescription(ValidCharacters.validatingString(jEditorPaneDescripcion.getText()));
        OBSvalidator.setCausa(ValidCharacters.validatingString(jEditorPaneCausa.getText()));
        OBSvalidator.setEfecto(ValidCharacters.validatingString(jEditorPaneEfecto.getText()));
        OBSvalidator.setNormatividad(ValidCharacters.validatingString(jTextPaneNormatividadQNSC.getText()));
        if (OBSvalidator.make_message()) {
            jTextAreaTextAlertOBS.setText(OBSvalidator.getMessage());
            jDialogObservationAlert.setVisible(true);
            try {
                SoundUtils.tone(164814, 500);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(MainGroup.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            if (NewComplexObservation.addSpecialObservacionHistorial(documento, markSelectedDocumento, OBSvalidator.getConcepto(), OBSvalidator.getDescription(), OBSvalidator.getCausa(), OBSvalidator.getEfecto(), OBSvalidator.getNormatividad()) != null) {
                Marca_DocumentoDAOImpl.getInstance().incert(markSelectedDocumento);
            }
        }
        jPanelObservation.setVisible(false);
        jTabbedPane1.remove(jPanelObservation);
        jTabbedPane1.repaint();
        ObservationPanelReset();
    }//GEN-LAST:event_jButtonObservacionOKActionPerformed

    private void jButtonAceptarOBSAlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarOBSAlertActionPerformed
        jDialogObservationAlert.setVisible(false);
    }//GEN-LAST:event_jButtonAceptarOBSAlertActionPerformed

    private void jPasswordLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordLoginActionPerformed
        accesToSystem();
    }//GEN-LAST:event_jPasswordLoginActionPerformed
    /**
     * Un boton para quitar
     *
     * @deprecated
     * @param evt
     */
    private void QuitarBoton_AbrirDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarBoton_AbrirDocumentoActionPerformed
        openPDFFile(documento.getReferenciaDocumento());
    }//GEN-LAST:event_QuitarBoton_AbrirDocumentoActionPerformed

    private void jSliderPDFMarksStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderPDFMarksStateChanged
        int valScroll = jSliderPDFMarks.getValue();
        valScroll = 101 - (valScroll);
        valScroll = valScroll * 550;
        desliceDocumentOnY = valScroll / 100;
        PDFPanel.setLocation(20, -desliceDocumentOnY);
        DrawPanel.setLocation(20, -desliceDocumentOnY);
        PDFFondObj.repaint();
        DrawPanel.repaint();

    }//GEN-LAST:event_jSliderPDFMarksStateChanged

    private void jButtonObservacionCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObservacionCancelarActionPerformed
        listMarkPage.remove(markSelectedDocumento);
        jPanelObservation.setVisible(false);
        jTabbedPane1.remove(jPanelObservation);
        listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
        drawMarks();
        jTabbedPane1.repaint();
        ObservationPanelReset();
        markSelectedDocumento = null;

    }//GEN-LAST:event_jButtonObservacionCancelarActionPerformed

    private void ObservationPanelReset() {
        jPanelObservation.setVisible(false);
        jTextFieldConceptoOBS.setText("");
        jEditorPaneCausa.setText("");
        jEditorPaneDescripcion.setText("");
        jEditorPaneEfecto.setText("");
        jTextPaneNormatividadQNSC.setText("");
        OBSvalidator.cleaner();
    }

    /**
     * Tratamiento para marcas especiales que almacenan texto
     *
     * @return
     */
    private String newSpecialMark() {
        short op = this.idMarcaSelected;
        switch (op) {
            case 3://Anotaciones  incorrectas una elipse variable
                System.out.println("Special mark - Anotaciones incorrectas");
                panelNotas = new JPanelNotas();
                panelNotas.setSize(220, 100);
                DrawPanel.add(panelNotas);
                panelNotas.setLocation(markSelectedDocumento.getPosicionX().intValue() - 20, markSelectedDocumento.getPosicionY().intValue() + 20);
                panelNotas.setVisible(true);
                DrawPanel.repaint();
                break;
            case 10://Observacion
                System.out.println("Special mark - Observación");
                jTabbedPane1.add(jPanelObservation);
                jPanelObservation.setLocation(0, 0);
                jPanelObservation.setSize(341, 540);
                jPanelObservation.transferFocus();
                jPanelObservation.setVisible(true);
                //DrawPanel.remove(jPanelObservation);
                break;
            case 19://Notas Aclaratorias
                System.out.println("Special mark - Notas");
                panelNotas = new JPanelNotas();
                panelNotas.setSize(220, 100);
                DrawPanel.add(panelNotas);
                panelNotas.setLocation(markSelectedDocumento.getPosicionX().intValue() - 20, markSelectedDocumento.getPosicionY().intValue() + 20);
                panelNotas.setVisible(true);
                DrawPanel.repaint();
                break;
        }
        return "";
    }

    /**
     * Muestra un minipanel con la marca a agregar
     *
     * @param X Posicion del mause en X
     * @param Y Posicion del mause en Y
     */
    public void showMarkToAdd(int X, int Y) {
        if (fileSelectedBoolean) {//Valida si se ha abirto un archivo
            if (markImage != null) {//Valida que se seleccione un tipo de marca
                int posy = Y;
                int posx = X;
                //Posicion de menu aceptar
                int y;
                int valScroll = jSliderPDFMarks.getValue();
                valScroll = 101 - (valScroll);
                valScroll = valScroll * 550;
                desliceDocumentOnY = valScroll / 100;
                y = (int) desliceDocumentOnY;
                //Objeto de la clase MiniMarkPane
                paneMarkToDraw.drawPanelMark(dirSpecificMark);
                paneMarkToDraw.setVisible(true);
                paneMarkToDraw.setSize(45, 45);
                paneMarkToDraw.setLocation(posx - 20, posy - 20);
                DrawPanel.add(paneMarkToDraw);
            }
            DrawPanel.repaint();
        }
    }

    ///////////////////////////////////////////////////////////////////////////////////////
    //HACER UN MÉTODO DE SCROLL .....  
    //   
    /**
     * Coloca una imagen a partir de la dirección y el imagName
     *
     */
    public void SetMark(String imagName) {
        symbolSelectS = imagName;
        dirSpecificMark = pathMarks + symbolSelectS;/////Dirección especifica de marca
        markImage = new ImageIcon(dirSpecificMark).getImage();
        System.out.println("SetMark ..... Marca seleccionada: " + symbolSelectS);
    }

    public int getIndex() {
        return ActualPageOnDocument;
    }

    public void setIndex(int index) {
        this.ActualPageOnDocument = index;
    }

    public String getNameFile() {
        return nameFile;
    }

    public void setNameFile(String nameFile) {
        this.nameFile = nameFile;
    }

    public String getSymbolSelect() {
        return symbolSelectS;
    }

    public void setSymbolSelect(String symbolSelect) {
        this.symbolSelectS = symbolSelect;
    }

    /**
     * Abre un PDF para dibujarse en el PDF panel
     *
     * @param rute ruta en cadena del archivo, atributos de la tabla documento
     * REFERENCIA_DOCUMENTO + NOMBRE_DOCUMENTO
     */
    public void openPDFFile(String rute) {
        try {
            File file = new File(rute);
            RandomAccessFile raf = new RandomAccessFile(file, "r");
            FileChannel fchannel = raf.getChannel();
            ByteBuffer buf = fchannel.map(FileChannel.MapMode.READ_ONLY, 0, fchannel.size());//**
            PDFFondObj.setBuffPDFDirPersistance(buf);
            PDFFondObj.paintPagePDF(1);
            fileSelectedBoolean = true;
            listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
            drawMarks();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo no encontrado");
            Logger.getLogger(MainGroup.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGroup.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.toString());
        }
    }

    /**
     * Abre un PDF para dibujarse en el PDF panel
     *
     * @param rute ruta en cadena del archivo, atributos de la tabla documento
     * @param page Página a dibujar
     */
    public void openPDFFile(String rute, int page) {

        try {
            File file = new File(rute);
            RandomAccessFile raf = new RandomAccessFile(file, "r");
            FileChannel fchannel = raf.getChannel();
            ByteBuffer buf = fchannel.map(FileChannel.MapMode.READ_ONLY, 0, fchannel.size());//**
            PDFFondObj.setBuffPDFDirPersistance(buf);
            PDFFondObj.paintPagePDF(page);
            fileSelectedBoolean = true;
            listMarkPage = ApplicationMarks.getListOfMarksForDocumentPage(documento, PDFFondObj.getIndice());
            drawMarks();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo no encontrado");
            Logger.getLogger(MainGroup.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGroup.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.toString());
        }

    }
    //************************************************************************
    //************************************************************************

    //***********************************************************************
    /**
     * Método principal, arranca los hilos con run method
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //////Coneccion con la base de datos
        //mx.unam.patronato.auditoria.siga.core.DBConection.DerbyConection.conect();
        //////////////////////////
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainGroup().setVisible(true);
                //new JInternalFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DrawPanel;
    private javax.swing.JPanel DrawPanel1;
    private javax.swing.JButton MarkBottonAIQNDC;
    private javax.swing.JButton MarkBottonCPC;
    private javax.swing.JButton MarkBottonDDCIOH;
    private javax.swing.JButton MarkBottonDDPAI;
    private javax.swing.JButton MarkBottonDQNRR;
    private javax.swing.JButton MarkBottonDR;
    private javax.swing.JButton MarkBottonFDD;
    private javax.swing.JButton MarkBottonFDDEI;
    private javax.swing.JButton MarkBottonNA;
    private javax.swing.JButton MarkBottonNotasA;
    private javax.swing.JButton MarkBottonOAV;
    private javax.swing.JButton MarkBottonPA;
    private javax.swing.JButton MarkBottonPDA;
    private javax.swing.JButton MarkBottonSPA;
    private javax.swing.JButton MarkBottonSuma;
    private javax.swing.JButton MarkBottonVCDF;
    private javax.swing.JButton MarkBottonVCRC;
    private javax.swing.JButton MarkBottonVCRP;
    private javax.swing.JPanel MarkBottonVDF;
    private javax.swing.JButton MarkBottonVEF;
    private javax.swing.JButton MarkBottonVF;
    private javax.swing.JButton MarkBottonVS;
    private javax.swing.JMenuBar MenuBarrNorthInternalFrameMarks;
    private javax.swing.JPanel PDFPanel;
    private javax.swing.JPanel PDFPanel1;
    private javax.swing.JButton QuitarBoton_AbrirDocumento;
    private javax.swing.JButton jButtonAceptarOBSAlert;
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonEntrar;
    private javax.swing.JButton jButtonFondoFrame;
    private javax.swing.JButton jButtonObservacionCancelar;
    private javax.swing.JButton jButtonObservacionOK;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JButton jButtonSimbolAlert;
    private javax.swing.JDialog jDialogObservationAlert;
    private javax.swing.JEditorPane jEditorPaneCausa;
    private javax.swing.JEditorPane jEditorPaneDescripcion;
    private javax.swing.JEditorPane jEditorPaneEfecto;
    private javax.swing.JFileChooser jFileChooserPDF;
    private javax.swing.JInternalFrame jInternalFrameMarksEditor;
    private javax.swing.JLabel jLabelArchivosRecientes;
    private javax.swing.JLabel jLabelCausaObs;
    private javax.swing.JLabel jLabelConcepto;
    private javax.swing.JLabel jLabelDescripcionObs;
    private javax.swing.JLabel jLabelEfectoOBS;
    private javax.swing.JLabel jLabelNormatividadQNSC;
    private javax.swing.JLabel jLabelPasswodrRecuest;
    private javax.swing.JLabel jLabelSIGAAuditoriaUNAM;
    private javax.swing.JLabel jLabelTitleOBS;
    private javax.swing.JLabel jLabelUserRecuest;
    private javax.swing.JLayeredPane jLayeredPaneDrawArea;
    private javax.swing.JMenu jMenuConsultaTrabajos;
    private javax.swing.JMenu jMenuConsultarInformesYObservaciones;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jMenuProgramaDeRevisiones;
    private javax.swing.JMenu jMenuTrabajosEnEjecucion;
    private javax.swing.JPanel jPanelArchivosRecientes;
    private javax.swing.JPanel jPanelListArchivosRecientes;
    private javax.swing.JPanel jPanelLogin;
    private javax.swing.JPanel jPanelOBSAlert;
    private javax.swing.JPanel jPanelObservation;
    private javax.swing.JPasswordField jPasswordLogin;
    private javax.swing.JScrollPane jScrollPaneCausa;
    private javax.swing.JScrollPane jScrollPaneDescripcion;
    private javax.swing.JScrollPane jScrollPaneEfecto;
    private javax.swing.JScrollPane jScrollPaneNormatividadQNSC;
    private javax.swing.JScrollPane jScrollPaneTextAlertOBS;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JSlider jSliderPDFMarks;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaTextAlertOBS;
    private javax.swing.JTextField jTextFieldConceptoOBS;
    private javax.swing.JTextField jTextFieldUser;
    private javax.swing.JTextPane jTextPaneNormatividadQNSC;
    // End of variables declaration//GEN-END:variables
}
